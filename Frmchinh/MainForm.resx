<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIPDxUQEBIQFg8VEA8QFQ8VFRUVFRUVFRUWFhUVFRUY
        HSggGBolGxUVITEhJSorLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhUPDxcrHRUdKy0tLS0tKy0tLSst
        LS0rLSstKy0tLSstLS0rKy03Ky8tNy4tNystLS0rLTArLSstKy3/wAARCAC3ARMDASIAAhEBAxEB/8QA
        HAAAAAcBAQAAAAAAAAAAAAAAAAECAwQFBgcI/8QAShAAAgEDAQUFBQMIBgcJAAAAAQIDAAQREgUGEyEx
        IkFRYYEHMnGRoRRCciNDUoKSscHRM2JjorLwJDRTc7PC8RUXNUSTo9Lh4v/EABkBAQEBAQEBAAAAAAAA
        AAAAAAEAAgMEBf/EACARAQEBAQEAAwEBAAMAAAAAAAABERICAxMhMQRBUcH/2gAMAwEAAhEDEQA/ALAL
        SsU4EpQSvc+RhnTR6ae00YSrThkJR6Ke0UrRRpwwEoaKf00YSrThjRStFPaKPRVqwxoo9FP8Ohw6hhgJ
        R6KkcOj4dS5RwlGFp/hUYjqOGNNHpp/h0fCoWI+KPTUjhUfCpOIwWj0VI4VHwqNXKNoo9FSRFR8OrViN
        ooaKkiOj4dWnEbRR6KkcOhw6tWI+ihoqTw6HDq1co4Sj0VI4dDh1aeUfRQ0VI0UNFC5MaKFP6KFWrlWh
        aPTTwSj00sYZC0oJTwSlBKGp5M6KMJUgR0oR0a3yjhKMR1JCUoJVp5RhFShFUoR0sRUaeEThUfCqYIqU
        IqulwhCKjEVTeFR8KrRyh8Ohw6m8KhwqtXKHw6MR1M4VHw6ujyhcOj4dTOHR8OjViFw6Ph1M4dHw6tWI
        XCo+HUzRR8OrTiFwqHDqbw6GirViHw6HDqZooaKtWIfDocKpmihoq1YicKhwqmCKlcKjTPKDwqHCqdwq
        LhUdNcIXCoVM4VCnRwpQlGEp4LSglbtcpDQSlhKdCUsJRrchkJSglPhKWI6NakMBKWqU+I6cWKjWuajh
        KWsdSFip1YqNanmowjpwR1JEVLEVHR4qJw6Lh1OEVHwqOjfj1A4dHw6ncGj4Iq7H01A4dDh1YcIUYiFH
        Z+lX8KhwqseEKrJ9pxtGzWrJO6MmY4pI2PvDUMlgoOnV1Iq7X0kXMqRKXldEQdXchQPU1lb/AH/tEbRA
        ss75CgRrhSTyADNzJJ8Aa597RtpX5u/9LiKR9Yo1YFOHk5COMgvgHJIz5YwKj7tb37PtJRMba94oBAPF
        R9OeRIACDOM9aeh9cd2t1LKCyMrEAlCVJU94JUkH0NOcKszsHfyzuHVBLOruVRUkQYLMQFGpQeZPLme+
        tiG8x8DyPyrPdP1xE4dDh1MI8qGKe19cQ+HQ4dS+Xl86PA8Ku19cQ+HRiOpeF/yKMafEfWrtT40UR0oR
        U60wHQE/So15tiCBS0zaABk5BJx44XJx51np0nmHeFRGKou728VttDX9nYloyAyMMNg+6wGTlTg8/Krc
        xUdNcf8ASBwqFTeDQq7X1s0qUsLSgKWBXoeKQgLTipSlFOqKzrchCx06sdKUU6orNrr58wlYqcEXlS1p
        5TWLa6zzDSw04IqdDUsNRrWQ2I6UI6Xroa6NWE8Oj0UfEqn2zvTbWmRLJ21XOhQWbwAwOQPPvx41K3Fv
        oqtvds28HJ5Fz+iOZ+nSuXbf9oMt0xSJtEfQIpyx/ERzPw6VZ7ubjz3GJbwvFGcEQj+lYf1s/wBGPLmf
        hXX6pJvqvJf9Nt58Ta08u+sOdMaM7HkFzzPoATTkm0r+Rcw28SHuMxb6qCrfSrOx2bBaLpijRB3nvP4m
        PNvU0zdbwWkH9Lc2yfiljX95rF5/4jr5vv8AtrLba2Ntm8iaJr2zijdWV0jjcEg92sjUPQiqDdL2Y3mz
        b2O6jubZlXKSRflF1xtycZ0nn0Iz3qK2tz7Q9lRjtXsB/CS/+AGqd/atskdLlj8IZv4pRL+Y36vVvqtZ
        cWAkUpIqPGwwyMAykeBU8jVJNuDs9ulnbA+Ua4/dUS09pmzpdRSSUhcZPCk5Z8sZPTuFXex95rS7OmCd
        GfGeGco/7DAGoKg7h2o5C1QeaPIhHmCrAg1pTdTD3gCPNalBqWrGhK/7Z/Zp6Ar+40tL1T1SQHybV/iq
        ZLpwS+nAGSTjkPPwqr2ftW1mkKWs8bSDOdBEijHUauYz5A5pRaSzGdYyoVWBfDYZlUd5xjqccqs/szeK
        n0I/iahwrKsrSMFclVUEHTgDryOfKpIv/wBJH9OY/hUhmF/BT+sf5U2beQ9yD9Y5/wANSUulPj6gj99K
        MwxyPwOM/wDWgsLv5vaNlqI+y124zHCGJwP036EL5dT9RyO73kkcmS6mLPq1BAASDjuUdmP6E+ddG3g9
        njyEzQzLLeySFpri6HZ045LHGikAdMA8gB8qjd/2VyLeRyXwgeAOWkCMSDpUlVKlR2S2kEeGa1MZXHsa
        3cl/8TlDxpJEY4Ie942Kkyv5HSNI9fCuqaaAP8sUeqsX9rr5lgtNChqo6Mh/WXApQFFilrXpeCFKKcUU
        gCliiukOClqaQiknAqSloe8+g51iukJU0sNUDaO1oLeeG2YlrmcsIoR1IUEsxPRVABOT4HGTyq0CeIX4
        dfrRrRAala6rN69ovaWM9xEqNLFEXVWBKkjGAQCCfSuTWvtD27KQUsVYE9Fs7jH7QblQtds10RlrNbr7
        aubmJmvLOS1kUAksRw2HiuTqXHeGHqe7K76b5aswwHsc9T9M468+4UrVpvdvyEzDbHnzBl/gn865XLtQ
        zMxySAff7mPfjxx41VXN8Z3PaPAHJj01nv59SPly8O/Y7p7q/aFW4uVxb8jHD04g7iw7k8u/4dYWomxt
        jPdYkbKQdzfef8APQf1j6Z7rbbe2INnRAHr9yMc3bzJPP9Y1I303mj2egUANcMOxD3AdNb46L4Dvx8SO
        N397JPI0srFnY5JP7gO4eVST9tbxT3ZIdtMeeUScl/W729fpVRQoVIKMGrPYW7l3ftptLeWXBwWUYRT4
        NIcKvqa6nuz7DGOH2hOFH+wg5t8GlYYHoD8atLne68cmWVUZmk0hI1BZn58yqjmR512fcLcqSGRbu6VV
        lVWEcecsobkWcjlnGQBz94/Ctvsfd61sUIt4o48+9Iebt+KRuZ9Tgd1HcbYto+TTKT4L2j/do1Jax0uq
        STemEe6kzegA+pqJLvio6Qn1cf8AxqSNv9upLtLhhZsQoCTaMWWOR8gq7suc4x0Ix31UbNsL6zaMizHY
        GMQSRNEFxggBmRwCPBTiraXfpV/MH/1P/wA1An9pCL1tn9HH8qkvzvCHRlMdxBLpOlpoZBEGxyzKF06c
        95Io9lX6XsKy4ZJVJR4wxDxSLykiYj3hn0I0kd1Yqb2xwI2k2lx8Q0ePrWp3Q2t9vje8WF4oZXGhHKln
        KDQ8o0/dOFA80J76k0cfnR3N0qIXcgKBkn+XifKmi9c19o28ztcDZ9ue2Auts+6zjPP8KEH9fyqSXtL2
        pLFPwxbExg4JMqrL6R6SvzcelbnZ97HcRJNE2qNwCD9CCO4g8iO7Feeo9kGYy8NRw4YhLJM7MDzPlntH
        uXBye+t77H9tY1WbtkmVXiPiChdyPAaVQ/FqbBHXNVGGpkGj1Vh107qo6Y1UKcXSlpQpGaPNd3hlOA05
        Euo4FR9VWFkmBnvP7qz6/I6ef2pcaBRgep7zS+tMSzrGrSSMqRqCzOxCqoHUknkBXOtt+02W4c2+w7WS
        5kzpN0UYwqfIcs/iYqPjXN2bLbOx7Q3EW0blgklqkgSVpOGihupc8s4y3U47Rzms3tT2p2ocxWMU97OO
        6FG4Y+LhSSPNVNVOzPZxcXzC427dSzN1Foj4jXyZlwB8EA+JromzNlwWqCO3ijjjH3UUKPicdT5mpKbd
        6XaFwOLerHEpbUkCAqQuBgPkkls58PgKvriZU95gORPoBkk+A86g7c2wtsukYMrDIXuUfpt5eA7/AJkc
        +21vTDLs95I51ef7VwivUvpUNgEctI1Bs9MjHXFUmi3P2lb874a8xRHEY6nvb41ynadw0zFCSIwfyh6Z
        I+6D347+7OevKpTX0zSDQrFy2AoXWWLZUKAM5OSMeeK2m4m4UrsLi8hkVFP5O2ZGBJH3nXHIDuU9e/z1
        mCXf4Z3I3N4gW5ulxCMGK3I94dzOPDwHf3+FaLfTeqPZ0OeTTsCIofH+u2Oij69B4jUbQtbgRsYo014w
        nFcRpnxc+9geQzXMr7cOFpTcbW2vAJHPaSIA/BUdyAAOgGmguXX1488rSysWkc6mc95/gO4DuAp3Zmyr
        i6bRbwyyty5Roz4z44HIeZrvu6u4WyANaWs0pXlxbpJAG81V1WNviAa3lvEEUJEiJGOiqoUeijkKNLgm
        wvYxfz4a5aK2TwJ4sn7CHT82FdK3e9kmzbTDSI1xIOeqcgp6RDC4/FqrcKh72+g/lTjDAzmhKvae2oLF
        AmkasdmGMBQB0HLoo/lWZuN855CQnDjHkNbAebNyHyrXzRRs2po4y/TUyqT8yM01K6DoqfIUphHvJJuc
        jO34mJ+nQUpX0j7o+P8AIVe7TtI5QQAEbudAAfUDrSbTddRzZix5HlnHzP8AKkM9Pcof0j5DpUSQufdj
        augwbBRfu1LTZSj7oo1OUyWc7dIzUO72JPoZiuAASc+QrsVxBFEpdyoUVzTfTbRuMwx5WLPugZZ/AHHi
        e6lMLu/u620r1bcZEQ/KTyD7sYPMA/pN7o+Oe416BgiWJFjjULGiqioOQVVGAAPAAVndz9hrs+30ED7R
        IRJM39b7qZ8FBx8Sx76vw+aL+qFlvGvOF1fNd3M04bHGnkbiZwUQszq3mFCqMeHLvrvu3b1ILeR5HRBw
        pMM7BRnScYz1Oa84bNXkrYzpBBz0w4K4+LHCeWrNMTWbP22LbLJwuHMVeOSbGF0YQsYwTrcc8L07Sk4w
        M2Hsxl4m2EbiCT8lPIZQCofsFS2kgEc3HLArJwSiSWKODQgVMIHGtHkxqCsG5KSWXteZyTyFdA9lWwW+
        0vfjC2wWWGHSeT9so/ZJLKo0AjPfjwqTreuhqqProw9WHo/mhTOuhVi1W5os0VJJrq8hyMZIFSto7Sit
        YXnncJDGupnPcPADvJ5AAcySBUezHMn0rhXtT31O0J/s8Df6HCxAIPKVxyMh8VHML6nv5c/X9d/jn463
        Z7N/7YWO7vCTZMElt9ng9jSeayXJH9I5GDo91enaOSdfBEqKERVVQMBFACgeAA6Vz72M7xLc7PW2J/L2
        35Nl8YySY2Hljs/q+YroaVl0Lpu4nSJS8jKqDqzHA/6+VVm8m8cNgmXOqYjKQg8z5t+ivn8s1y/ae8cl
        0+qVtbZ0pAuQik9AMdfTmfGuvx/DfX7/ACPJ8/8Ar8/HeZ++j/tEune7QMA2zJNJeVZGjMoz/QlgpMY7
        umGB6jnig35sbWYxybPS3gVY8NCuQzvk9piO5RjnjPvE+XRd2tymOJ77OTgrag4A8OJj/CPXvFbiMBRh
        QAByAAwB8AK5/JM9Tm/j0f5/k7+O/Z4z1f5+/wDjzHY2+0bK7WW1indwCUKxSSgB1I5dnrg9R863uzLX
        ea899hBGcdqZmT/21JcH4gV2LVRii3WpMYKx9nBYhr69uJj3xx/koz5Nksx+IK1qdkbuWdlztreJGxji
        AapD+KVsufU1a0jV30ENGeZ/6UTSgdKjyTZqk3n22LK1knPMqvZXONTnsovqxAz3ZqSPvVvcbdvs9uok
        uiuognCRKeQaQ/PA6nB6cyOZbU3jvOITJtBlfPuokelT4YIJ+ZqI20GZWBchnPFnnHvFnIUKuc4JOFX9
        EDyqhuNpurOkQREBwMAdACWZmOSx5DmT31rBrp25W/Eski2t4yMz9mG6UYDsBnhyL0V+RIxyPTkeu2lJ
        NcElili0uyNCW0uhK6CQCOHOsZ5qQ+PLw767Jf7eC7M+34ALW8coU9OJIAFU/rsBViN7W2uI5o7WLDXU
        zogXqI1YgGR/gMnHfjwraB8dMAd3TAH8v85rhG5O2IIb43l7Mo0JI4L5LPK/ZyFAJOFL9By5Vuf+8XjD
        NlbySJn/AFmU8CDvBwxy7kY6KpNXNUroAkI7/X/I/h6d9U99vACCISDyGZuWkA/odz/i93v7eCtY653g
        klXTNIr9SUjXRF5Agklh8SR3gKaYSea5OiFSx8fujPfnv/zzoxJG3dtM/LUTgY1E8h5/Hzqk2PtaztZD
        cXcoXQTwk0u7PJ+mAoPJfPvZT3VcX2wRboXmWW4uPu2kKk8z01kckXzP1rE3G4u0bqQz3AhgX+0kVVRf
        AAZIFKX+0faunS2tnb+vMwQfHSuon5is9eb+38/IziJefZhUJ/eOXHo1RLnYljbjEt+jv+hboZM+WskL
        9ap53i1aIYpiT0D++3wRf4ZpCTOeKSzuzuRguzFm9WPOqzZ84HYfPvDIzjmrBuXqvyJ+I0ey9zNo3PuW
        /CQ/nJjw/wC6QX/u1p9n+x5CdV1dOx5ZSFAgz+Ns5+QpwbIwsF+ttE0cRYs6gEnGFAUoWUdzFWZdXgx5
        AnNdC3S2XfNEhhDQxYGlmdowR46R2jnrnGD41rdiboWNl2oLdA/+1fMj/EM2dPpir3VWpHP1dQ9nWMqc
        5biRz4Dkv8SfpVlqpnVRa6sHR/VQpnXRVYejJqHtO9W3hkmk9yNGc+g6DzPT1qcVrMb+WL3NtwFOFYqz
        Dn2gpyBkdBkZ9BTbjMm1m9897ZP+zrW0iYfbL+GKWQjlw4p+YQeGdWj8KnPXNYXae5UlpkXEsYkHWNe0
        QfAkcqd3m2TMJEYe9FBDGCM8uFkJjPgoQelafeiCO4xdRuzxzASAgcgSAWQnPJlJII8q5vQwm7m25NmX
        a3MPNlyrIeSuhxqQ48eXPuIB7q6Ttj2tXDqDaRxxQtyEp/KSZxzBzhUYeBB7iCQQTzTaFpg8lqsWVkJw
        evUdxx0yOhrUyXWfU2ZLjW3u1HlYyvNxHY5JOvX06sSMeXInurpHsYtIJFluXw11HIEVTz4aMoIcDxY6
        xnwXljJzwz7SfBfr/Op2yN4rmyl4ttIY3xpJHMFeuGVsgjlXX38u+cefx/mnn11j1k8uaANebW9qm0z+
        dj/YFMN7S9qEg/aOhzgImPXlXmx63prP+cijMijqyj1rzNce0/aj/n0X8MMX/Mpqun322hJ793cY8Efh
        f8MCnB+vVDygjsnPnTFxJgY8ax3sgVzsqOWRnZ5pZ5SzsWY4cxjmeZ5RitRO2SflQTcktct9su0yPs1u
        DyLPOw/CNKfVm/ZFdLkFcW9rjZ2rGPC2hHzkkP8AGmCs+0jMFjGGVyTIARrQZ0qwXqQMB8+fPFS0t1jd
        H1RyY0lj2ki4gCgq0jgDQTGDqHUBgOoNV0KI0gLR5wluGcsebNGgVI1GBrJ6ZJ6E8sU9NMILbhiZHDsJ
        OQ1aByAJU5XPJcjGRqUgnmBJa7fvraSQkT3NxeNxRJOyrHFnAJVFPbwpQADAA86vd6tpsmwbKFffmduz
        4pEz/wDM0dZKGW5aFQ/CeFsgOscfJ86VUMqgq+BnHXDeBrZ7d3Lv7xLVIeFHHBZxRlpGK/lXGubAUE4y
        wGfFTUmY2YsUShjFG0oHOWTt8+p0o2VA8DpyPGpcu2g5zJMvhqJJAx8M1c2fsec4NxeKfJI2b5MzD91a
        Kw9lVlHzdpnPmY0HoUUN9aRsZGy27Zp1We5cY7CgqnxGgMW+BK1NuN/rpsQ2sKxA/m0aOJ8fhBeTPmCK
        6FZ7kWKjH2aJh/akzf8AEJrQW2zhGNKKir4IFUfIVYOnGLZNuXI7AmRc90ZT63JUd/UVKT2ZXdydV5ck
        94MkrzkH/djSB6Oa7E0IXqGNNGYDooFOC+qw2yvZjZxc24sh5HGeGvL/AHeGI8mY1p7DZUFsMQQxRjv0
        Kqk/EjmfWp7OT1NJ0GtYxaRikZp11xTIpYo80kmjxmktUAzRZpGaLNOA5mhTeqjqWpZWq/asPZ1/dUEt
        5L1LeeMfvq1ZaQRWa6z8c82zscOeIhDRsMh1OpSD4EcjWG2nZ3Oz3aS0Y8MnMkBAZG8zG2Q3yyO6umbS
        3FBcy2VzLbOTkoueGT8ARy8iCKodobL2lAP9IiS6iH563A4oHiY+Wv0A+JrOOk9xibfei1nGi6gMT9OL
        D2k9Y2OpfRj8KYud3Vn7VpLHKvXCHLgecRw49RU+92TbXbHhsol59nOiTI5EFGwT8qob3daaM9nn34Iw
        aP1pBu9mzIxBidcctJHMAchnzqI0LDqrfKriO+2hDyDzkdNLflV9FbI+lSot65FwLi1t5B3kxtE5+BjI
        UH9U1amaK0pDg5xnyrXRba2ZN/Sw3MLZ6ronX489BHyNPrsnZ839Fe2+f0ZNcJ+cihfrV+Ji5e0SeQz3
        UgpjwraybkuV1xFJEwTqidJBjxyhNZ6Zktz2NDzZzqIV1THcFOQWPiQcd3PpJ6S3Ht+Fsq0XofskDY83
        QMfqxqykwKi7Mv0ltoWjIKGCFlPiCgxVRvTtQ28RbkWIOkH3R5kd/wD9fPJTrnaESsFZ1DsSFXPNiBk6
        fHA51yL2xW5W9gm7ngKD8Ubkn6SLUGXaEpuBcOzNIrKwZuvI5CgdFXqMDxqy383js7614aM5njYMhCNg
        MORDMcAAgn1ApDHyhmQSJk8NHGgdQzYCyYHM9g4z3cH4U1Y7NlmcrGmpl0fks4LqwC8vLlknuHa6Colv
        flDnmCMjI8+o8x5VrtlWG09oriCKThMBmZ8RRkeJc41jyGacSOt7b2lzFoRWSOUTMurGtwcqusZyi4QA
        8wcMcDVgdN2XvrNd9i2siX7yZMovgSdIx6kVXbveyWKMiS+lMsnI8KPKxjyLe8w+Gmui2lpHCgjiRUjH
        RFAAHoP30xyu2qy2sLh+1czY/sYOwvq/vH5irW3t1QYVcD4dfMnqT5mnKfipqwgLTgpZppjREBbzNNlh
        nmM0C1NNWhacMg7qbaSmmNJLUs2jZqRRE0VLJ3OPOkoKRmlBqgaak0JGyc0jNIKoUnNFTg1csabNGzU2
        TWHbRk0nOKImizUNQtqbDtLv/WbeJ26ayo1ftDn9aobj2c2ZGIZbuEdyxztp/Zk1CtVmhmjDPTnd97Pb
        yMlra6ilGciOdNBx39uPkx+IxVNcbPuov9YsLgcyNUSrOv4i0ZJwfwiuug0sOaOWp7cIuWsM6ZVVX8Hi
        dD82QVDlsdmt0dB8JMfvNeg2YHqM0gwRHrGn7I/lRy1284zbIs/u3AHxdD+6ocuz7df/ADMf98/4UNem
        xbxf7NP2V/lShEg6KvyFXK7cG2PvIYIUt7e6kLLkALqYcyTyU25YDn0zV5tjalxdLHFDbX8mlFDSG3fL
        P95jnAUZ6eVdkjTwqQIuXnVi6cOt9wtpzjJjhhGfz0mWx4hIg2PgatrH2PBiDeXbMB+biXT8mbkB8Frq
        5pDNTgvpnti7kbPs8GK2j1jnxZPyrg+IL50+mK0Yx/CmS1DVVjOnHGKQTSWfl5UStTi0rNOpJimQaDPi
        rBp9paZeSmWlpsvTgvo6ZKQXpstSS9OM6cLUgtSDJSC9ODTpekFqbLURanBpwtSdVNlqLXTjOnaQ7U0Z
        KQWpwX0d10KZ1UKR0vCaSaOhiuLsQaFLxSgtSN4owtPKlOKlRxG0UOHUwR0sJVp5QhHStFTdIoagO4Ua
        1iHootNSXlHlUaSWkU/nlRiTFRDPTZnqwdJkktRHl50001MPJzpkZvpLElL18h+81A4lLE/PPfVg6SZW
        /rA/Cm1kqPJLnoMeVI104Okwy0gzVEMlJ4lPIvpJMtJMlRzJSTJTg6SC9EWqMZKIvTg6SC9EXqPxKSXp
        xno+ZKIvTGuiLVYNPF6SXpnVSS1Q08WpJami9JL0jT2qhUfXR1Dppw1GGoUK416xg0sNRUKEcD0oSUKF
        R0fEoGaioVLSWuKaa4oUKhpiSemHnoUK1GbTLS0niUKFajGiMlJMlChSNDiUOJQoVIQekF6FCkWkl6Tr
        oUKWRaqLVQoVIWqhqoUKkTqoi9ChUzoi9EWoUKhpJai1UKFIJLUkvRUKkGuhQoVHH//Z
</value>
  </data>
</root>